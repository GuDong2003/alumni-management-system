<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.alumnimanagementsystem.mapper.AlumniMapper">
    
    <resultMap id="BaseResultMap" type="com.example.alumnimanagementsystem.entity.Alumni">
        <id column="id" property="id"/>
        <result column="user_id" property="userId"/>
        <result column="current_company" property="currentCompany"/>
        <result column="current_position" property="currentPosition"/>
        <result column="industry" property="industry"/>
        <result column="location" property="location"/>
        <result column="bio" property="bio"/>
        <result column="birth_date" property="birthDate"/>
        <result column="active" property="active"/>
        <result column="last_activity_time" property="lastActivityTime"/>
        <result column="created_at" property="createdAt"/>
        <result column="updated_at" property="updatedAt"/>
    </resultMap>
    
    <sql id="Base_Column_List">
        id, user_id, current_company, current_position, industry, location, bio, birth_date, active, last_activity_time, created_at, updated_at
    </sql>
    
    <insert id="insert" parameterType="com.example.alumnimanagementsystem.entity.Alumni" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO alumni (
            user_id, current_company, current_position, industry, location, bio, birth_date, active, last_activity_time,
            created_at, updated_at
        ) VALUES (
            #{userId}, #{currentCompany}, #{currentPosition}, #{industry}, #{location}, #{bio}, #{birthDate}, #{active}, #{lastActivityTime},
            #{createdAt}, #{updatedAt}
        )
    </insert>
    
    <update id="update" parameterType="com.example.alumnimanagementsystem.entity.Alumni">
        UPDATE alumni
        SET
            current_company = #{currentCompany},
            current_position = #{currentPosition},
            industry = #{industry},
            location = #{location},
            bio = #{bio},
            birth_date = #{birthDate},
            active = #{active},
            last_activity_time = #{lastActivityTime},
            updated_at = NOW()
        WHERE user_id = #{userId}
    </update>
    
    <delete id="delete">
        DELETE FROM alumni WHERE id = #{id}
    </delete>
    
    <delete id="deleteById">
        DELETE FROM alumni WHERE id = #{id}
    </delete>
    
    <delete id="deleteByUserId">
        DELETE FROM alumni WHERE user_id = #{userId}
    </delete>
    
    <select id="selectById" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM alumni
        WHERE id = #{id}
    </select>
    
    <select id="selectAll" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM alumni
    </select>
    
    <select id="selectByUserId" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM alumni
        WHERE user_id = #{userId}
    </select>
    
    <select id="selectByIndustry" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM alumni
        WHERE industry = #{industry}
    </select>
    
    <select id="selectByLocation" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM alumni
        WHERE location = #{location}
    </select>
    
    <select id="selectByActive" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM alumni
        WHERE active = #{active}
    </select>
    
    <update id="updateActive">
        UPDATE alumni
        SET active = #{active},
            updated_at = NOW()
        WHERE id = #{id}
    </update>
    
    <update id="updateLastActivityTime">
        UPDATE alumni
        SET last_activity_time = #{lastActivityTime},
            updated_at = NOW()
        WHERE id = #{id}
    </update>
    
    <select id="search" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM alumni
        WHERE current_company LIKE CONCAT('%', #{keyword}, '%')
        OR current_position LIKE CONCAT('%', #{keyword}, '%')
        OR industry LIKE CONCAT('%', #{keyword}, '%')
        OR location LIKE CONCAT('%', #{keyword}, '%')
        OR bio LIKE CONCAT('%', #{keyword}, '%')
    </select>
    
    <select id="count" resultType="long">
        SELECT COUNT(*) FROM alumni
    </select>
</mapper> 